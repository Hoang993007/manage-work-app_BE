version: '3.8'
services:
  mongodb:
    image: mongo:${MONGO_TAG?err}
    container_name: ${MONGO_CONTANER_NAME?err}
    env_file:
      - ./.docker.env
    restart: on-failure
    # restart: unless-stopped
    ports:
      - ${MONGO_PORT?err}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME?err}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD?err}
      # - MONGO_INITDB_ROOT_USERNAME=hoang
      # - MONGO_INITDB_ROOT_PASSWORD=1
      # healthcheck:
      #   test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      #   interval: 30s
      #   timeout: 10s
      #   retries: 3
    volumes:
      - mongodb-store:/data/db
    networks:
      - mongodb_network

  # #http://localhost:8081/
  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-express
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER: mongodb
  #     ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME?err}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD?err}
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: admin123
  #   volumes:
  #     - mongodb-store
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - mongodb_network
  #   ports:
  #     - 8081:8081
  #   # healthcheck:
  #   #   test: wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
  #   #   interval: 30s
  #   #   timeout: 10s
  #   #   retries: 3
  #   restart: unless-stopped

  redis:
    image: redis:${REDIS_TAG?err}
    command: redis-server
    container_name: ${REDIS_CONTANER_NAME?err}
    env_file:
      - ./.docker.env
    restart: on-failure
    volumes:
      - redis-store:/var/lib/redis
    ports:
      - ${REDIS_PORT?err}:6379

volumes:
  mongodb-store:
    name: mongodb-store
  redis-store:
    name: redis-store

networks:
  mongodb_network:
    name: mongodb_network
